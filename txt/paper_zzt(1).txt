 计算机科学技术专业毕设和论文的问答
 国家教育部2020年12月印发了《本科毕业论文（设计）抽检办法（试行）》的通知，（教督〔2020〕5号），之后各地教育部门几年开始逐渐加强对本科生毕业论文的管理。高校授予学士学位的本科论文不仅要通过知网查重审核，还对所有论文采用了挂网盲审的方式，并安排专家抽查，专家对论文评价的方面包括：选题意义、写作安排、逻辑结构、专业能力以及学术规范等，重点是判断论文的 “合格性” ！[1]
 若涉嫌存在抄袭、剽窃、伪造、篡改、买卖、代写等学术不端行为的毕业论文，教育部门会依法核实，并对作者撤销已授予学位，并注销其学位证书。[1]
 学校当前要求本科论文的文献综述部分为3千字，论文总体1万字，为了让三年级本科生尽早进入写论文的状态，特编写本程序用以动态发布我和学生在交流毕业设计和论文的沟通和对话，由多位学生从自己的视角表述，整理成为文本，预计 1 万字左右，供广大学生学习，可以理解消化后引用 ！
1. 同步异步


同步操作：

httpLoader.request('txt/paper_zzt(1).txt');：这是一个同步操作，它发送了一个HTTP请求来获取文本内容，但是它会阻塞后续代码的执行直到请求完成。
let arr = httpLoader.textContent;：同样是一个同步操作，它会等待httpLoader对象获取文本内容后才继续执行。
let paper = createPaper(arr);：同步操作，会等待arr数组准备好后才调用createPaper函数。

回调函数：

setTimeout 和 addEventListener 中传入的回调函数是异步操作完成后执行的回调，这种方式是JavaScript中常见的处理异步操作的方式

总体来说，上面的代码使用了异步操作来处理HTTP请求和页面加载事件，以避免阻塞主线程。在异步操作完成后，通过回调函数来处理相应的逻辑。

httpLoader模型读入文本文件后，把文本处理为数组。
创建createPaper(arr)函数，把文本数组转换为：“标题” + “内容” 对象数组，为UI提供便利的数据结构
创建createPaperUI(dad,paper)函数，利用文章的对象数据结构，动态生成一套UI，这套UI将实现文章的目录生成和其下内容的开/关互动，
 
print函数用来在为页面上的任何已经存在的dom对象生成文字内容。
调用函数print(dom ,str)会用动画的方式把str逐个字符在页面上的dom内打印出来
该函数利用了函数式编程方法，把函数看作对象，建立和利用了print.str属性
该函数利用了动画API结合递归算法，实现了文字逐个输出。

2. 组织代码规范

缩进和空格：

使用统一的缩进风格，推荐使用4个空格作为一个缩进。
在逗号后面添加一个空格，使代码更易读。
命名规范：

变量和函数名使用驼峰命名法，例如createPaper。
对象属性和方法使用统一的命名规范，例如httpLoader.request和timer.begin。
代码注释：

添加必要的注释来解释代码的功能和逻辑，提高代码可读性。
代码结构：

将相关功能的代码块封装成函数，提高代码的可维护性。
在代码块之间使用空行进行分隔，使代码结构更清晰。


3. 递归

函数print并不是典型的递归函数，它是通过window.requestAnimationFrame来实现一个类似递归的效果，实现了逐个字符输出的效果。

在这个函数中，有一个内部函数oneChar，它递归地调用自身来实现逐个字符输出的效果。具体来说，函数oneChar会检查当前要输出的字符串是否还有字符需要输出，如果有，则将下一个字符添加到DOM元素中，并更新剩余的字符串。然后通过window.requestAnimationFrame来请求浏览器执行下一帧动画，从而实现逐个字符输出的效果。

虽然这个函数中没有直接调用自身来实现递归，但是通过oneChar函数的递归调用和window.requestAnimationFrame的机制，实现了一种类似递归的效果，即在每一帧动画中递归地输出下一个字符，直到整个字符串输出完毕。

4. 跨域
跨域问题是指浏览器限制不同源（域名、协议、端口号任意一个不同）间的资源访问。跨域请求会受到同源策略的限制，导致无法直接访问对方资源，常见解决方法包括JSONP、CORS等。跨域问题是指浏览器出于安全考虑限制不同源（域名、协议、端口号任意一个不同）之间的资源访问。这种限制称为同源策略，可以防止恶意网站窃取用户信息。跨域请求通常会被浏览器拦截，常见的解决方法包括JSONP（利用<script>标签跨域请求）和CORS（跨域资源共享）。开发人员也可以通过代理服务器、iframe消息传递等方式来解决跨域问题。
跨域问题的三要素是：域名、协议、端口号。只有当这三个要素完全匹配时，浏览器才认为是同源，否则就会出现跨域问题
安全性，浏览器不允许直接访问本地的资源，这就是所谓的跨域问题
解决方法是，把计算机模拟成一个本地服务器，浏览器发起的请求端口号与服务器本身端口号要一致，这样就能通过简单的模拟服务器访问资源了